# Generated by nodejs_toolchains_repo.bzl
#
# These can be registered in the workspace file or passed to --extra_toolchains flag.
# By default all these toolchains are registered by the nodejs_register_toolchains macro
# so you don't normally need to interact with these targets.

load(":defs.bzl", "resolved_toolchain")

resolved_toolchain(name = "resolved_toolchain", visibility = ["//visibility:public"])


toolchain(
    name = "linux_amd64_toolchain",
    exec_compatible_with = ["@platforms//os:linux", "@platforms//cpu:x86_64"],
    toolchain = "@nodejs_linux_amd64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
toolchain(
    name = "linux_amd64_toolchain_target",
    target_compatible_with = ["@platforms//os:linux", "@platforms//cpu:x86_64"],
    toolchain = "@nodejs_linux_amd64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)

toolchain(
    name = "linux_arm64_toolchain",
    exec_compatible_with = ["@platforms//os:linux", "@platforms//cpu:arm64"],
    toolchain = "@nodejs_linux_arm64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
toolchain(
    name = "linux_arm64_toolchain_target",
    target_compatible_with = ["@platforms//os:linux", "@platforms//cpu:arm64"],
    toolchain = "@nodejs_linux_arm64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)

toolchain(
    name = "linux_s390x_toolchain",
    exec_compatible_with = ["@platforms//os:linux", "@platforms//cpu:s390x"],
    toolchain = "@nodejs_linux_s390x//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
toolchain(
    name = "linux_s390x_toolchain_target",
    target_compatible_with = ["@platforms//os:linux", "@platforms//cpu:s390x"],
    toolchain = "@nodejs_linux_s390x//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)

toolchain(
    name = "linux_ppc64le_toolchain",
    exec_compatible_with = ["@platforms//os:linux", "@platforms//cpu:ppc"],
    toolchain = "@nodejs_linux_ppc64le//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
toolchain(
    name = "linux_ppc64le_toolchain_target",
    target_compatible_with = ["@platforms//os:linux", "@platforms//cpu:ppc"],
    toolchain = "@nodejs_linux_ppc64le//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)

toolchain(
    name = "darwin_amd64_toolchain",
    exec_compatible_with = ["@platforms//os:macos", "@platforms//cpu:x86_64"],
    toolchain = "@nodejs_darwin_amd64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
toolchain(
    name = "darwin_amd64_toolchain_target",
    target_compatible_with = ["@platforms//os:macos", "@platforms//cpu:x86_64"],
    toolchain = "@nodejs_darwin_amd64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)

toolchain(
    name = "darwin_arm64_toolchain",
    exec_compatible_with = ["@platforms//os:macos", "@platforms//cpu:arm64"],
    toolchain = "@nodejs_darwin_arm64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
toolchain(
    name = "darwin_arm64_toolchain_target",
    target_compatible_with = ["@platforms//os:macos", "@platforms//cpu:arm64"],
    toolchain = "@nodejs_darwin_arm64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)

toolchain(
    name = "windows_amd64_toolchain",
    exec_compatible_with = ["@platforms//os:windows", "@platforms//cpu:x86_64"],
    toolchain = "@nodejs_windows_amd64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
toolchain(
    name = "windows_amd64_toolchain_target",
    target_compatible_with = ["@platforms//os:windows", "@platforms//cpu:x86_64"],
    toolchain = "@nodejs_windows_amd64//:toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)
