"@generated by @aspect_rules_js//npm/private:npm_import.bzl for npm package table@6.9.0"

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_package_store_internal.bzl", _npm_package_store = "npm_package_store_internal")

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_import.bzl",
    _npm_imported_package_store = "npm_imported_package_store_internal",
    _npm_link_imported_package = "npm_link_imported_package_internal",
    _npm_link_imported_package_store = "npm_link_imported_package_store_internal")

PACKAGE = "table"
VERSION = "6.9.0"
_ROOT_PACKAGE = ""
_PACKAGE_STORE_NAME = "table@6.9.0"

# Generated npm_package_store targets for npm package table@6.9.0
# buildifier: disable=function-docstring
def npm_imported_package_store(link_root_name):
    _npm_imported_package_store(
        link_root_name = link_root_name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        deps = {
            ":.aspect_rules_js/{link_root_name}/ajv@8.17.1/pkg": "ajv",
            ":.aspect_rules_js/{link_root_name}/ansi-regex@5.0.1/pkg": "ansi-regex",
            ":.aspect_rules_js/{link_root_name}/ansi-styles@4.3.0/pkg": "ansi-styles",
            ":.aspect_rules_js/{link_root_name}/astral-regex@2.0.0/pkg": "astral-regex",
            ":.aspect_rules_js/{link_root_name}/color-convert@2.0.1/pkg": "color-convert",
            ":.aspect_rules_js/{link_root_name}/color-name@1.1.4/pkg": "color-name",
            ":.aspect_rules_js/{link_root_name}/emoji-regex@8.0.0/pkg": "emoji-regex",
            ":.aspect_rules_js/{link_root_name}/fast-deep-equal@3.1.3/pkg": "fast-deep-equal",
            ":.aspect_rules_js/{link_root_name}/fast-uri@3.1.0/pkg": "fast-uri",
            ":.aspect_rules_js/{link_root_name}/is-fullwidth-code-point@3.0.0/pkg": "is-fullwidth-code-point",
            ":.aspect_rules_js/{link_root_name}/json-schema-traverse@1.0.0/pkg": "json-schema-traverse",
            ":.aspect_rules_js/{link_root_name}/lodash.truncate@4.4.2/pkg": "lodash.truncate",
            ":.aspect_rules_js/{link_root_name}/require-from-string@2.0.2/pkg": "require-from-string",
            ":.aspect_rules_js/{link_root_name}/slice-ansi@4.0.0/pkg": "slice-ansi",
            ":.aspect_rules_js/{link_root_name}/string-width@4.2.3/pkg": "string-width",
            ":.aspect_rules_js/{link_root_name}/strip-ansi@6.0.1/pkg": "strip-ansi",
            ":.aspect_rules_js/{link_root_name}/table@6.9.0/pkg": "table",
        },
        ref_deps = {
            ":.aspect_rules_js/{link_root_name}/ajv@8.17.1/ref": "ajv",
            ":.aspect_rules_js/{link_root_name}/lodash.truncate@4.4.2/ref": "lodash.truncate",
            ":.aspect_rules_js/{link_root_name}/slice-ansi@4.0.0/ref": "slice-ansi",
            ":.aspect_rules_js/{link_root_name}/string-width@4.2.3/ref": "string-width",
            ":.aspect_rules_js/{link_root_name}/strip-ansi@6.0.1/ref": "strip-ansi",
        },
        lc_deps = {
            ":.aspect_rules_js/{link_root_name}/ajv@8.17.1/pkg": "ajv",
            ":.aspect_rules_js/{link_root_name}/ansi-regex@5.0.1/pkg": "ansi-regex",
            ":.aspect_rules_js/{link_root_name}/ansi-styles@4.3.0/pkg": "ansi-styles",
            ":.aspect_rules_js/{link_root_name}/astral-regex@2.0.0/pkg": "astral-regex",
            ":.aspect_rules_js/{link_root_name}/color-convert@2.0.1/pkg": "color-convert",
            ":.aspect_rules_js/{link_root_name}/color-name@1.1.4/pkg": "color-name",
            ":.aspect_rules_js/{link_root_name}/emoji-regex@8.0.0/pkg": "emoji-regex",
            ":.aspect_rules_js/{link_root_name}/fast-deep-equal@3.1.3/pkg": "fast-deep-equal",
            ":.aspect_rules_js/{link_root_name}/fast-uri@3.1.0/pkg": "fast-uri",
            ":.aspect_rules_js/{link_root_name}/is-fullwidth-code-point@3.0.0/pkg": "is-fullwidth-code-point",
            ":.aspect_rules_js/{link_root_name}/json-schema-traverse@1.0.0/pkg": "json-schema-traverse",
            ":.aspect_rules_js/{link_root_name}/lodash.truncate@4.4.2/pkg": "lodash.truncate",
            ":.aspect_rules_js/{link_root_name}/require-from-string@2.0.2/pkg": "require-from-string",
            ":.aspect_rules_js/{link_root_name}/slice-ansi@4.0.0/pkg": "slice-ansi",
            ":.aspect_rules_js/{link_root_name}/string-width@4.2.3/pkg": "string-width",
            ":.aspect_rules_js/{link_root_name}/strip-ansi@6.0.1/pkg": "strip-ansi",
            ":.aspect_rules_js/{link_root_name}/table@6.9.0/pkg_pre_lc_lite": "table",
        },
        dev = False,
        has_lifecycle_build_target = False,
        transitive_closure_pattern = True,
        npm_package_target = "@@aspect_rules_js++npm+npm__table__6.9.0//:pkg",
        package_store_name = _PACKAGE_STORE_NAME,
        lifecycle_hooks_env = {},
        lifecycle_hooks_execution_requirements = {},
        use_default_shell_env = False,
        exclude_package_contents = [],
    )

# Generated npm_package_store and npm_link_package_store targets for npm package table@6.9.0
# buildifier: disable=function-docstring
def npm_link_imported_package_store(name, link_root_name, link_alias):
    return _npm_link_imported_package_store(
        name,
        link_root_name,
        link_alias,
        root_package = _ROOT_PACKAGE,
        link_visibility = ["//visibility:public"],
        bins = {},
        package_store_name = _PACKAGE_STORE_NAME,
        public_visibility = True,
    )

# Generated npm_package_store and npm_link_package_store targets for npm package table@6.9.0
# buildifier: disable=function-docstring
def npm_link_imported_package(
        name = "node_modules",
        link = True,
        fail_if_no_link = True):
    return _npm_link_imported_package(
        name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        link = link,
        link_packages = {
        },
        public_visibility = True,
        npm_link_imported_package_store_macro = npm_link_imported_package_store,
        npm_imported_package_store_macro = npm_imported_package_store,
        fail_if_no_link = fail_if_no_link,
    )
