package test;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.Provider;
import dagger.internal.QualifierMetadata;
import javax.annotation.processing.Generated;

@QualifierMetadata
@DaggerGenerated
@Generated(
    value = "dagger.internal.codegen.ComponentProcessor",
    comments = "https://dagger.dev"
)
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation",
    "nullness:initialization.field.uninitialized"
})
public final class A_MembersInjector implements MembersInjector<A> {
  private final Provider<String> valueBProvider;

  private A_MembersInjector(Provider<String> valueBProvider) {
    this.valueBProvider = valueBProvider;
  }

  public static MembersInjector<A> create(Provider<String> valueBProvider) {
    return new A_MembersInjector(valueBProvider);
  }

  @Override
  public void injectMembers(A instance) {
    B_MembersInjector.injectValueB(instance, valueBProvider.get());
  }
}
