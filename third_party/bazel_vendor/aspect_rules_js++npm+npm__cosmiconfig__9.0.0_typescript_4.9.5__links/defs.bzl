"@generated by @aspect_rules_js//npm/private:npm_import.bzl for npm package cosmiconfig@9.0.0_typescript_4.9.5"

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_package_store_internal.bzl", _npm_package_store = "npm_package_store_internal")

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_import.bzl",
    _npm_imported_package_store = "npm_imported_package_store_internal",
    _npm_link_imported_package = "npm_link_imported_package_internal",
    _npm_link_imported_package_store = "npm_link_imported_package_store_internal")

PACKAGE = "cosmiconfig"
VERSION = "9.0.0_typescript_4.9.5"
_ROOT_PACKAGE = ""
_PACKAGE_STORE_NAME = "cosmiconfig@9.0.0_typescript_4.9.5"

# Generated npm_package_store targets for npm package cosmiconfig@9.0.0_typescript_4.9.5
# buildifier: disable=function-docstring
def npm_imported_package_store(link_root_name):
    _npm_imported_package_store(
        link_root_name = link_root_name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        deps = {
            ":.aspect_rules_js/{link_root_name}/@babel+code-frame@7.27.1/pkg": "@babel/code-frame",
            ":.aspect_rules_js/{link_root_name}/@babel+helper-validator-identifier@7.27.1/pkg": "@babel/helper-validator-identifier",
            ":.aspect_rules_js/{link_root_name}/argparse@2.0.1/pkg": "argparse",
            ":.aspect_rules_js/{link_root_name}/callsites@3.1.0/pkg": "callsites",
            ":.aspect_rules_js/{link_root_name}/cosmiconfig@9.0.0_typescript_4.9.5/pkg": "cosmiconfig",
            ":.aspect_rules_js/{link_root_name}/env-paths@2.2.1/pkg": "env-paths",
            ":.aspect_rules_js/{link_root_name}/error-ex@1.3.2/pkg": "error-ex",
            ":.aspect_rules_js/{link_root_name}/import-fresh@3.3.1/pkg": "import-fresh",
            ":.aspect_rules_js/{link_root_name}/is-arrayish@0.2.1/pkg": "is-arrayish",
            ":.aspect_rules_js/{link_root_name}/js-tokens@4.0.0/pkg": "js-tokens",
            ":.aspect_rules_js/{link_root_name}/js-yaml@4.1.0/pkg": "js-yaml",
            ":.aspect_rules_js/{link_root_name}/json-parse-even-better-errors@2.3.1/pkg": "json-parse-even-better-errors",
            ":.aspect_rules_js/{link_root_name}/lines-and-columns@1.2.4/pkg": "lines-and-columns",
            ":.aspect_rules_js/{link_root_name}/parent-module@1.0.1/pkg": "parent-module",
            ":.aspect_rules_js/{link_root_name}/parse-json@5.2.0/pkg": "parse-json",
            ":.aspect_rules_js/{link_root_name}/picocolors@1.1.1/pkg": "picocolors",
            ":.aspect_rules_js/{link_root_name}/resolve-from@4.0.0/pkg": "resolve-from",
            ":.aspect_rules_js/{link_root_name}/typescript@4.9.5/pkg": "typescript",
        },
        ref_deps = {
            ":.aspect_rules_js/{link_root_name}/env-paths@2.2.1/ref": "env-paths",
            ":.aspect_rules_js/{link_root_name}/import-fresh@3.3.1/ref": "import-fresh",
            ":.aspect_rules_js/{link_root_name}/js-yaml@4.1.0/ref": "js-yaml",
            ":.aspect_rules_js/{link_root_name}/parse-json@5.2.0/ref": "parse-json",
            ":.aspect_rules_js/{link_root_name}/typescript@4.9.5/ref": "typescript",
        },
        lc_deps = {
            ":.aspect_rules_js/{link_root_name}/@babel+code-frame@7.27.1/pkg": "@babel/code-frame",
            ":.aspect_rules_js/{link_root_name}/@babel+helper-validator-identifier@7.27.1/pkg": "@babel/helper-validator-identifier",
            ":.aspect_rules_js/{link_root_name}/argparse@2.0.1/pkg": "argparse",
            ":.aspect_rules_js/{link_root_name}/callsites@3.1.0/pkg": "callsites",
            ":.aspect_rules_js/{link_root_name}/cosmiconfig@9.0.0_typescript_4.9.5/pkg_pre_lc_lite": "cosmiconfig",
            ":.aspect_rules_js/{link_root_name}/env-paths@2.2.1/pkg": "env-paths",
            ":.aspect_rules_js/{link_root_name}/error-ex@1.3.2/pkg": "error-ex",
            ":.aspect_rules_js/{link_root_name}/import-fresh@3.3.1/pkg": "import-fresh",
            ":.aspect_rules_js/{link_root_name}/is-arrayish@0.2.1/pkg": "is-arrayish",
            ":.aspect_rules_js/{link_root_name}/js-tokens@4.0.0/pkg": "js-tokens",
            ":.aspect_rules_js/{link_root_name}/js-yaml@4.1.0/pkg": "js-yaml",
            ":.aspect_rules_js/{link_root_name}/json-parse-even-better-errors@2.3.1/pkg": "json-parse-even-better-errors",
            ":.aspect_rules_js/{link_root_name}/lines-and-columns@1.2.4/pkg": "lines-and-columns",
            ":.aspect_rules_js/{link_root_name}/parent-module@1.0.1/pkg": "parent-module",
            ":.aspect_rules_js/{link_root_name}/parse-json@5.2.0/pkg": "parse-json",
            ":.aspect_rules_js/{link_root_name}/picocolors@1.1.1/pkg": "picocolors",
            ":.aspect_rules_js/{link_root_name}/resolve-from@4.0.0/pkg": "resolve-from",
            ":.aspect_rules_js/{link_root_name}/typescript@4.9.5/pkg": "typescript",
        },
        dev = False,
        has_lifecycle_build_target = False,
        transitive_closure_pattern = True,
        npm_package_target = "@@aspect_rules_js++npm+npm__cosmiconfig__9.0.0_typescript_4.9.5//:pkg",
        package_store_name = _PACKAGE_STORE_NAME,
        lifecycle_hooks_env = {},
        lifecycle_hooks_execution_requirements = {},
        use_default_shell_env = False,
        exclude_package_contents = [],
    )

# Generated npm_package_store and npm_link_package_store targets for npm package cosmiconfig@9.0.0_typescript_4.9.5
# buildifier: disable=function-docstring
def npm_link_imported_package_store(name, link_root_name, link_alias):
    return _npm_link_imported_package_store(
        name,
        link_root_name,
        link_alias,
        root_package = _ROOT_PACKAGE,
        link_visibility = ["//visibility:public"],
        bins = {},
        package_store_name = _PACKAGE_STORE_NAME,
        public_visibility = True,
    )

# Generated npm_package_store and npm_link_package_store targets for npm package cosmiconfig@9.0.0_typescript_4.9.5
# buildifier: disable=function-docstring
def npm_link_imported_package(
        name = "node_modules",
        link = True,
        fail_if_no_link = True):
    return _npm_link_imported_package(
        name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        link = link,
        link_packages = {
        },
        public_visibility = True,
        npm_link_imported_package_store_macro = npm_link_imported_package_store,
        npm_imported_package_store_macro = npm_imported_package_store,
        fail_if_no_link = fail_if_no_link,
    )
