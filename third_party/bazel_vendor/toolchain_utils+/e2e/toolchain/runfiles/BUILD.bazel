load("@rules_go//go:def.bzl", "go_binary")
load("@toolchain_utils//toolchain/info:defs.bzl", "toolchain_info")
load("@toolchain_utils//toolchain/test:defs.bzl", "toolchain_test")
load("@bazel_skylib//rules:build_test.bzl", "build_test")

toolchain_type(
    name = "type",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "binary",
    srcs = ["binary.go"],
    data = [":fixture.txt"],
    pure = "on",
    deps = ["@rules_go//go/runfiles"],
)

toolchain_info(
    name = "info",
    target = ":binary",
    variable = "BINARY",
)

toolchain(
    name = "hermetic",
    toolchain = ":info",
    toolchain_type = ":type",
)

alias(
    name = "resolved",
    actual = "@resolved-runfiles",
)

toolchain_test(
    name = "fixture-txt",
    size = "small",
    stdout = ":fixture.txt",
    toolchains = [":resolved"],
)

genrule(
    name = "generate-resolved",
    outs = ["resolved.log"],
    cmd_bash = "$(BINARY) > $@",
    cmd_bat = "$(BINARY) > $@",
    tags = ["manual"],
    toolchains = [":resolved"],
)

toolchain_test(
    name = "resolved-log",
    size = "small",
    stdout = ":resolved.log",
    toolchains = [":resolved"],
)

genrule(
    name = "generate-info",
    outs = ["info.log"],
    cmd_bash = "$(BINARY) > $@",
    cmd_bat = "$(BINARY) > $@",
    tags = ["manual"],
    toolchains = [":info"],
)

toolchain_test(
    name = "info-log",
    size = "small",
    stdout = ":info.log",
    toolchains = [":resolved"],
)
