load("@local//:triplet.bzl", "TRIPLET")
load("//toolchain/triplet:rule.bzl", "triplet")

triplet(
    name = "triplet",
    value = TRIPLET.value,
    visibility = ["//visibility:public"],
)

config_setting(
    name = "constraint",
    constraint_values = TRIPLET.constraints,
    visibility = ["//visibility:public"],
)

alias(
    name = "cpu",
    actual = "//toolchain/constraint/cpu:{}".format(TRIPLET.cpu),
    visibility = ["//visibility:public"],
)

alias(
    name = "os",
    actual = "//toolchain/constraint/os:{}".format(TRIPLET.os.kind),
    visibility = ["//visibility:public"],
)

alias(
    name = "libc",
    actual = "//toolchain/constraint/libc:{}".format(TRIPLET.libc.kind),
    visibility = ["//visibility:public"],
)

platform(
    name = "platform",
    constraint_values = TRIPLET.constraints,
    visibility = ["//visibility:public"],
)
