"@generated by @aspect_rules_js//npm/private:npm_import.bzl for npm package optionator@0.9.4"

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_package_store_internal.bzl", _npm_package_store = "npm_package_store_internal")

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_import.bzl",
    _npm_imported_package_store = "npm_imported_package_store_internal",
    _npm_link_imported_package = "npm_link_imported_package_internal",
    _npm_link_imported_package_store = "npm_link_imported_package_store_internal")

PACKAGE = "optionator"
VERSION = "0.9.4"
_ROOT_PACKAGE = ""
_PACKAGE_STORE_NAME = "optionator@0.9.4"

# Generated npm_package_store targets for npm package optionator@0.9.4
# buildifier: disable=function-docstring
def npm_imported_package_store(link_root_name):
    _npm_imported_package_store(
        link_root_name = link_root_name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        deps = {
            ":.aspect_rules_js/{link_root_name}/deep-is@0.1.4/pkg": "deep-is",
            ":.aspect_rules_js/{link_root_name}/fast-levenshtein@2.0.6/pkg": "fast-levenshtein",
            ":.aspect_rules_js/{link_root_name}/levn@0.4.1/pkg": "levn",
            ":.aspect_rules_js/{link_root_name}/optionator@0.9.4/pkg": "optionator",
            ":.aspect_rules_js/{link_root_name}/prelude-ls@1.2.1/pkg": "prelude-ls",
            ":.aspect_rules_js/{link_root_name}/type-check@0.4.0/pkg": "type-check",
            ":.aspect_rules_js/{link_root_name}/word-wrap@1.2.5/pkg": "word-wrap",
        },
        ref_deps = {
            ":.aspect_rules_js/{link_root_name}/deep-is@0.1.4/ref": "deep-is",
            ":.aspect_rules_js/{link_root_name}/fast-levenshtein@2.0.6/ref": "fast-levenshtein",
            ":.aspect_rules_js/{link_root_name}/levn@0.4.1/ref": "levn",
            ":.aspect_rules_js/{link_root_name}/prelude-ls@1.2.1/ref": "prelude-ls",
            ":.aspect_rules_js/{link_root_name}/type-check@0.4.0/ref": "type-check",
            ":.aspect_rules_js/{link_root_name}/word-wrap@1.2.5/ref": "word-wrap",
        },
        lc_deps = {
            ":.aspect_rules_js/{link_root_name}/deep-is@0.1.4/pkg": "deep-is",
            ":.aspect_rules_js/{link_root_name}/fast-levenshtein@2.0.6/pkg": "fast-levenshtein",
            ":.aspect_rules_js/{link_root_name}/levn@0.4.1/pkg": "levn",
            ":.aspect_rules_js/{link_root_name}/optionator@0.9.4/pkg_pre_lc_lite": "optionator",
            ":.aspect_rules_js/{link_root_name}/prelude-ls@1.2.1/pkg": "prelude-ls",
            ":.aspect_rules_js/{link_root_name}/type-check@0.4.0/pkg": "type-check",
            ":.aspect_rules_js/{link_root_name}/word-wrap@1.2.5/pkg": "word-wrap",
        },
        dev = False,
        has_lifecycle_build_target = False,
        transitive_closure_pattern = True,
        npm_package_target = "@@aspect_rules_js++npm+npm__optionator__0.9.4//:pkg",
        package_store_name = _PACKAGE_STORE_NAME,
        lifecycle_hooks_env = {},
        lifecycle_hooks_execution_requirements = {},
        use_default_shell_env = False,
        exclude_package_contents = [],
    )

# Generated npm_package_store and npm_link_package_store targets for npm package optionator@0.9.4
# buildifier: disable=function-docstring
def npm_link_imported_package_store(name, link_root_name, link_alias):
    return _npm_link_imported_package_store(
        name,
        link_root_name,
        link_alias,
        root_package = _ROOT_PACKAGE,
        link_visibility = ["//visibility:public"],
        bins = {},
        package_store_name = _PACKAGE_STORE_NAME,
        public_visibility = True,
    )

# Generated npm_package_store and npm_link_package_store targets for npm package optionator@0.9.4
# buildifier: disable=function-docstring
def npm_link_imported_package(
        name = "node_modules",
        link = True,
        fail_if_no_link = True):
    return _npm_link_imported_package(
        name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        link = link,
        link_packages = {
        },
        public_visibility = True,
        npm_link_imported_package_store_macro = npm_link_imported_package_store,
        npm_imported_package_store_macro = npm_imported_package_store,
        fail_if_no_link = fail_if_no_link,
    )
