"@generated by @aspect_rules_js//npm/private:npm_import.bzl for npm package @csstools/media-query-list-parser@2.1.13_1798111938"

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_package_store_internal.bzl", _npm_package_store = "npm_package_store_internal")

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_import.bzl",
    _npm_imported_package_store = "npm_imported_package_store_internal",
    _npm_link_imported_package = "npm_link_imported_package_internal",
    _npm_link_imported_package_store = "npm_link_imported_package_store_internal")

PACKAGE = "@csstools/media-query-list-parser"
VERSION = "2.1.13_1798111938"
_ROOT_PACKAGE = ""
_PACKAGE_STORE_NAME = "@csstools+media-query-list-parser@2.1.13_1798111938"

# Generated npm_package_store targets for npm package @csstools/media-query-list-parser@2.1.13_1798111938
# buildifier: disable=function-docstring
def npm_imported_package_store(link_root_name):
    _npm_imported_package_store(
        link_root_name = link_root_name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        deps = {
            ":.aspect_rules_js/{link_root_name}/@csstools+css-parser-algorithms@2.7.1_at_csstools_css-tokenizer_2.4.1/pkg": "@csstools/css-parser-algorithms",
            ":.aspect_rules_js/{link_root_name}/@csstools+css-tokenizer@2.4.1/pkg": "@csstools/css-tokenizer",
            ":.aspect_rules_js/{link_root_name}/@csstools+media-query-list-parser@2.1.13_1798111938/pkg": "@csstools/media-query-list-parser",
        },
        ref_deps = {
            ":.aspect_rules_js/{link_root_name}/@csstools+css-parser-algorithms@2.7.1_at_csstools_css-tokenizer_2.4.1/ref": "@csstools/css-parser-algorithms",
            ":.aspect_rules_js/{link_root_name}/@csstools+css-tokenizer@2.4.1/ref": "@csstools/css-tokenizer",
        },
        lc_deps = {
            ":.aspect_rules_js/{link_root_name}/@csstools+css-parser-algorithms@2.7.1_at_csstools_css-tokenizer_2.4.1/pkg": "@csstools/css-parser-algorithms",
            ":.aspect_rules_js/{link_root_name}/@csstools+css-tokenizer@2.4.1/pkg": "@csstools/css-tokenizer",
            ":.aspect_rules_js/{link_root_name}/@csstools+media-query-list-parser@2.1.13_1798111938/pkg_pre_lc_lite": "@csstools/media-query-list-parser",
        },
        dev = False,
        has_lifecycle_build_target = False,
        transitive_closure_pattern = True,
        npm_package_target = "@@aspect_rules_js++npm+npm__at_csstools_media-query-list-parser__2.1.13_1798111938//:pkg",
        package_store_name = _PACKAGE_STORE_NAME,
        lifecycle_hooks_env = {},
        lifecycle_hooks_execution_requirements = {},
        use_default_shell_env = False,
        exclude_package_contents = [],
    )

# Generated npm_package_store and npm_link_package_store targets for npm package @csstools/media-query-list-parser@2.1.13_1798111938
# buildifier: disable=function-docstring
def npm_link_imported_package_store(name, link_root_name, link_alias):
    return _npm_link_imported_package_store(
        name,
        link_root_name,
        link_alias,
        root_package = _ROOT_PACKAGE,
        link_visibility = ["//visibility:public"],
        bins = {},
        package_store_name = _PACKAGE_STORE_NAME,
        public_visibility = True,
    )

# Generated npm_package_store and npm_link_package_store targets for npm package @csstools/media-query-list-parser@2.1.13_1798111938
# buildifier: disable=function-docstring
def npm_link_imported_package(
        name = "node_modules",
        link = True,
        fail_if_no_link = True):
    return _npm_link_imported_package(
        name,
        package = PACKAGE,
        version = VERSION,
        root_package = _ROOT_PACKAGE,
        link = link,
        link_packages = {
        },
        public_visibility = True,
        npm_link_imported_package_store_macro = npm_link_imported_package_store,
        npm_imported_package_store_macro = npm_imported_package_store,
        fail_if_no_link = fail_if_no_link,
    )
