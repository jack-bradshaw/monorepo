module(
    name = "com_jackbradshaw",
    version = "20250812",
)

# Versions
#
# Guidelines:
# - Only include versions that are referenced in multiple places.
# - Deps that are used in bazel-deps are prefixed with 'VERSION_'.
# - Deps that are used in maven only are prefixed with 'VERSION_MAVEN_'.

VERSION_ROBOLECTRIC = "4.12.2"

VERSION_DAGGER = "2.57"

VERSION_GRPC = "5.6.0"

VERSION_MAVEN_AUTO_VALUE = "1.11.0"

VERSION_MAVEN_FLOGGER = "0.9"

VERSION_MAVEN_J_MONKEY_ENGINE_MAIN = "3.7.0-stable"

VERSION_MAVEN_J_MONKEY_ENGINE_BULLET = "3.3.2-stable"

VERSION_MAVEN_GUAVA = "33.4.8-jre"

VERSION_MAVEN_GOOGLE_HTTP_CLIENT = "1.47.1"

VERSION_MAVEN_KTOR = "3.2.3"

VERSION_MAVEN_LWJGL = "3.3.6"

VERSION_MAVEN_PROTOBUF_JVM_VERSION = "4.32.0-RC2"

# Core Tools
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "buildozer", version = "8.2.1")
bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_testing", version = "0.9.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.21.1")
bazel_dep(name = "aspect_rules_lint", version = "1.6.0")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_jar = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_jar")

# C and C++
bazel_dep(name = "rules_cc", version = "0.2.5")

# JVM (Java + Kotlin)
bazel_dep(name = "rules_java", version = "8.15.1")
bazel_dep(name = "rules_kotlin", version = "2.1.8")
bazel_dep(name = "rules_jvm_external", version = "6.8")

## Maven Deps
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "com_jackbradshaw_maven",
    artifacts = [
        "androidx.test.ext:junit:1.3.0",
        "com.google.auto.factory:auto-factory:1.1.0",
        "com.google.auto.value:auto-value-annotations:%s" % VERSION_MAVEN_AUTO_VALUE,
        "com.google.auto.value:auto-value:%s" % VERSION_MAVEN_AUTO_VALUE,
        "com.google.auto:auto-common:1.2.2",
        "com.google.code.findbugs:jsr305:3.0.2",
        "com.google.code.gson:gson:2.13.1",
        "com.google.dagger:dagger-compiler:%s" % VERSION_DAGGER,
        "com.google.dagger:dagger-producers:%s" % VERSION_DAGGER,
        "com.google.dagger:dagger:%s" % VERSION_DAGGER,
        "com.google.flogger:flogger-system-backend:%s" % VERSION_MAVEN_FLOGGER,
        "com.google.flogger:flogger:%s" % VERSION_MAVEN_FLOGGER,
        "com.google.guava:failureaccess:1.0.3",
        "com.google.guava:guava-testlib:%s" % VERSION_MAVEN_GUAVA,
        "com.google.guava:guava:%s" % VERSION_MAVEN_GUAVA,
        "com.google.http-client:google-http-client-gson:%s" % VERSION_MAVEN_GOOGLE_HTTP_CLIENT,
        "com.google.http-client:google-http-client-test:%s" % VERSION_MAVEN_GOOGLE_HTTP_CLIENT,
        "com.google.http-client:google-http-client:%s" % VERSION_MAVEN_GOOGLE_HTTP_CLIENT,
        "com.google.protobuf:protobuf-java-util:%s" % VERSION_MAVEN_PROTOBUF_JVM_VERSION,
        "com.google.protobuf:protobuf-java:%s" % VERSION_MAVEN_PROTOBUF_JVM_VERSION,
        "com.google.protobuf:protobuf-javalite:%s" % VERSION_MAVEN_PROTOBUF_JVM_VERSION,
        "com.google.protobuf:protobuf-kotlin-lite:%s" % VERSION_MAVEN_PROTOBUF_JVM_VERSION,
        "com.google.protobuf:protobuf-kotlin:%s" % VERSION_MAVEN_PROTOBUF_JVM_VERSION,
        "com.google.protobuf:protobuf-lite:3.0.1",
        "com.google.truth:truth:1.4.4",
        "commons-codec:commons-codec:1.19.0",
        "io.ktor:ktor-server-core:%s" % VERSION_MAVEN_KTOR,
        "io.ktor:ktor-server-netty:%s" % VERSION_MAVEN_KTOR,
        "javax.annotation:jsr250-api:1.0",
        "javax.inject:javax.inject:1",
        "junit:junit:4.13.2",
        "org.jetbrains.kotlin:kotlin-test:2.2.0",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2",
        "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2",
        "org.jmonkeyengine:jme3-bullet-native:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_BULLET,
        "org.jmonkeyengine:jme3-bullet:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_BULLET,
        "org.jmonkeyengine:jme3-core:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_MAIN,
        "org.jmonkeyengine:jme3-desktop:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_MAIN,
        "org.jmonkeyengine:jme3-lwjgl3:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_MAIN,
        "org.jmonkeyengine:jme3-lwjgl:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_MAIN,
        "org.jmonkeyengine:jme3-testdata:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_MAIN,
        "org.jmonkeyengine:jme3-vr:%s" % VERSION_MAVEN_J_MONKEY_ENGINE_MAIN,
        "org.lwjgl:lwjgl-assimp:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-bgfx:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-cuda:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-egl:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-glfw:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-jawt:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-jemalloc:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-libdivide:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-llvm:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-lmdb:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-lz4:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-meow:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-meshoptimizer:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-nanovg:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-nfd:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-nuklear:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-odbc:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-openal:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-opencl:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-opengl:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-opengles:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-openvr:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-openxr:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-opus:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-par:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-remotery:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-rpmalloc:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-shaderc:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-spvc:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-sse:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-stb:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-tinyexr:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-tootle:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-vma:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-vulkan:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-xxhash:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-yoga:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl-zstd:%s" % VERSION_MAVEN_LWJGL,
        "org.lwjgl:lwjgl:%s" % VERSION_MAVEN_LWJGL,
        "org.mockito:mockito-core:5.18.0",
        "org.skyscreamer:jsonassert:1.5.3",
    ],
    fetch_sources = True,
    lock_file = "//:lock_maven_com_jackbradshaw.json",
    repositories = [
        "https://repo1.maven.org/maven2",
        "https://repository.mulesoft.org/nexus/content/repositories/public/",
        "https://maven.google.com/",
    ],
)
use_repo(maven, "com_jackbradshaw_maven")

## Formatting
http_jar(
    name = "ktfmt",
    integrity = "sha256-l/x/vRlNAan6RdgUfAVSQDAD1VusSridhNe7TV4/SN4=",
    url = "https://repo1.maven.org/maven2/com/facebook/ktfmt/0.46/ktfmt-0.46-jar-with-dependencies.jar",
)

http_jar(
    name = "google-java-format",
    sha256 = "33068bbbdce1099982ec1171f5e202898eb35f2919cf486141e439fc6e3a4203",
    url = "https://github.com/google/google-java-format/releases/download/v1.17.0/google-java-format-1.17.0-all-deps.jar",
)

# Go
bazel_dep(name = "rules_go", version = "0.56.1")

# Python
bazel_dep(name = "rules_python", version = "1.6.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = "3.12")
use_repo(python, "python_3_12")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.12",
    requirements_lock = "//:lock_pip_requirements.txt",
)
use_repo(pip, "pypi")

# Apple (Swift + Apple + iOS)
bazel_dep(name = "rules_swift", version = "3.1.2")
bazel_dep(name = "rules_apple", version = "4.1.2")
bazel_dep(name = "rules_ios", version = "6.0.1")

## Resolves conflict between rules_swift and rules_apple
single_version_override(
    module_name = "rules_swift",
    version = "3.1.2",
)

## Formatting
http_archive(
    name = "swiftformat",
    build_file_content = "filegroup(name = \"swiftformat\", srcs=[\"swiftformat_linux\"], visibility=[\"//visibility:public\"])",
    patch_cmds = ["chmod u+x swiftformat_linux"],
    sha256 = "f62813980c2848cb1941f1456a2a06251c2e2323183623760922058b98c70745",
    url = "https://github.com/nicklockwood/SwiftFormat/releases/download/0.49.17/swiftformat_linux.zip",
)

http_archive(
    name = "swiftformat_mac",
    build_file_content = "filegroup(name = \"swiftformat_mac\", srcs=[\"swiftformat\"], visibility=[\"//visibility:public\"])",
    patch_cmds = [
        # On MacOS, `xattr -c` clears the "Unknown developer" warning when executing a fetched bin
        "if command -v xattr > /dev/null; then xattr -c swiftformat; fi",
        "chmod u+x swiftformat",
    ],
    sha256 = "978eaffdc3716bbc0859aecee0d83875cf3ab8d8725779448f0035309d9ad9f3",
    url = "https://github.com/nicklockwood/SwiftFormat/releases/download/0.49.17/swiftformat.zip",
)

# Javascript (Core JS + Node)
bazel_dep(name = "aspect_rules_js", version = "2.5.0")
bazel_dep(name = "rules_nodejs", version = "6.3.0")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
)
use_repo(npm, "npm")

# Protobuf and gRPC
bazel_dep(name = "protobuf", version = "31.1")
bazel_dep(name = "rules_proto_grpc", version = VERSION_GRPC)
bazel_dep(name = "rules_proto_grpc_java", version = VERSION_GRPC)

## Not available in Bazel central repo yet.
bazel_dep(name = "grpc_kotlin", version = "2.1.0")
git_override(
    module_name = "grpc_kotlin",
    commit = "eaea34d",
    remote = "https://github.com/duckladydinh/grpc-kotlin",
)

## Required since gRPC kotlin is not available via bzlmod and cannot resolve its own deps.
## When any deps are updated, repin by running 'REPIN=1 bazelisk run @grpc_kotlin_maven//:pin'
grpc_kotlin_maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
grpc_kotlin_maven.install(
    name = "grpc_kotlin_maven",
    artifacts = [
        "com.google.jimfs:jimfs:1.3.0",
        "com.google.truth:truth:1.4.2",
        "com.google.truth.extensions:truth-proto-extension:1.4.2",
        "com.google.protobuf:protobuf-java:4.30.2",
        "com.google.protobuf:protobuf-kotlin:4.30.2",
        "com.google.guava:guava:33.3.1-android",
        "com.squareup:kotlinpoet:1.14.2",
        "junit:junit:4.13.2",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.1",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.10.1",
    ],
    fetch_sources = False,
    generate_compat_repositories = True,
    known_contributing_modules = [
        "grpc_kotlin",
        "com_jackbradshaw",
    ],
    lock_file = "//:lock_maven_grpc_kotlin.json",
    strict_visibility = True,
)
use_repo(grpc_kotlin_maven, "grpc_kotlin_maven")

## Formatting
bazel_dep(name = "rules_buf", version = "0.5.2")

buf = use_extension("@rules_buf//buf:extensions.bzl", "buf")
buf.toolchains(version = "v1.57.0")
use_repo(buf, "rules_buf_toolchains")

# Android
bazel_dep(name = "rules_android", version = "0.6.6")

remote_android_extensions = use_extension(
    "@rules_android//bzlmod_extensions:android_extensions.bzl",
    "remote_android_tools_extensions",
)
use_repo(remote_android_extensions, "android_tools")

android_sdk_repository_extension = use_extension(
    "@rules_android//rules/android_sdk_repository:rule.bzl",
    "android_sdk_repository_extension",
)
use_repo(android_sdk_repository_extension, "androidsdk")

# Dagger
http_archive(
    name = "dagger",
    patch_cmds = ["rm .gitignore"],
    strip_prefix = "dagger-dagger-%s" % VERSION_DAGGER,
    urls = ["https://github.com/google/dagger/archive/dagger-%s.zip" % VERSION_DAGGER],
)

# LLVM
bazel_dep(name = "toolchains_llvm", version = "1.1.2")

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_versions = {
        "": "16.0.0",
        "darwin-x86_64": "15.0.7",
    },
)
use_repo(llvm, "llvm_toolchain", "llvm_toolchain_llvm")

# Rust
bazel_dep(name = "rules_rust", version = "0.64.0")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2024",
    versions = ["1.85.0"],
)

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.spec(
    package = "serde",
    version = "1.0.219",
)
crate.from_specs()
use_repo(crate, "crates")
