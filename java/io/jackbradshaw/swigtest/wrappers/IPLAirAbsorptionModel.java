/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class IPLAirAbsorptionModel {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IPLAirAbsorptionModel(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPLAirAbsorptionModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(IPLAirAbsorptionModel obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libphononJNI.delete_IPLAirAbsorptionModel(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setType(IPLAirAbsorptionModelType value) {
    libphononJNI.IPLAirAbsorptionModel_type_set(swigCPtr, this, value.swigValue());
  }

  public IPLAirAbsorptionModelType getType() {
    return IPLAirAbsorptionModelType.swigToEnum(libphononJNI.IPLAirAbsorptionModel_type_get(swigCPtr, this));
  }

  public void setCoefficients(SWIGTYPE_p_float value) {
    libphononJNI.IPLAirAbsorptionModel_coefficients_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getCoefficients() {
    long cPtr = libphononJNI.IPLAirAbsorptionModel_coefficients_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setCallback(SWIGTYPE_p_f_float_int_p_void__float value) {
    libphononJNI.IPLAirAbsorptionModel_callback_set(swigCPtr, this, SWIGTYPE_p_f_float_int_p_void__float.getCPtr(value));
  }

  public SWIGTYPE_p_f_float_int_p_void__float getCallback() {
    long cPtr = libphononJNI.IPLAirAbsorptionModel_callback_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_float_int_p_void__float(cPtr, false);
  }

  public void setUserData(SWIGTYPE_p_void value) {
    libphononJNI.IPLAirAbsorptionModel_userData_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getUserData() {
    long cPtr = libphononJNI.IPLAirAbsorptionModel_userData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setDirty(IPLbool value) {
    libphononJNI.IPLAirAbsorptionModel_dirty_set(swigCPtr, this, value.swigValue());
  }

  public IPLbool getDirty() {
    return IPLbool.swigToEnum(libphononJNI.IPLAirAbsorptionModel_dirty_get(swigCPtr, this));
  }

  public IPLAirAbsorptionModel() {
    this(libphononJNI.new_IPLAirAbsorptionModel(), true);
  }

}
