/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class IPLPathEffectParams {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IPLPathEffectParams(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPLPathEffectParams obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(IPLPathEffectParams obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libphononJNI.delete_IPLPathEffectParams(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setEqCoeffs(SWIGTYPE_p_float value) {
    libphononJNI.IPLPathEffectParams_eqCoeffs_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getEqCoeffs() {
    long cPtr = libphononJNI.IPLPathEffectParams_eqCoeffs_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setShCoeffs(SWIGTYPE_p_float value) {
    libphononJNI.IPLPathEffectParams_shCoeffs_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getShCoeffs() {
    long cPtr = libphononJNI.IPLPathEffectParams_shCoeffs_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setOrder(int value) {
    libphononJNI.IPLPathEffectParams_order_set(swigCPtr, this, value);
  }

  public int getOrder() {
    return libphononJNI.IPLPathEffectParams_order_get(swigCPtr, this);
  }

  public void setBinaural(IPLbool value) {
    libphononJNI.IPLPathEffectParams_binaural_set(swigCPtr, this, value.swigValue());
  }

  public IPLbool getBinaural() {
    return IPLbool.swigToEnum(libphononJNI.IPLPathEffectParams_binaural_get(swigCPtr, this));
  }

  public void setHrtf(SWIGTYPE_p__IPLHRTF_t value) {
    libphononJNI.IPLPathEffectParams_hrtf_set(swigCPtr, this, SWIGTYPE_p__IPLHRTF_t.getCPtr(value));
  }

  public SWIGTYPE_p__IPLHRTF_t getHrtf() {
    long cPtr = libphononJNI.IPLPathEffectParams_hrtf_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p__IPLHRTF_t(cPtr, false);
  }

  public void setListener(IPLCoordinateSpace3 value) {
    libphononJNI.IPLPathEffectParams_listener_set(swigCPtr, this, IPLCoordinateSpace3.getCPtr(value), value);
  }

  public IPLCoordinateSpace3 getListener() {
    long cPtr = libphononJNI.IPLPathEffectParams_listener_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IPLCoordinateSpace3(cPtr, false);
  }

  public IPLPathEffectParams() {
    this(libphononJNI.new_IPLPathEffectParams(), true);
  }

}
