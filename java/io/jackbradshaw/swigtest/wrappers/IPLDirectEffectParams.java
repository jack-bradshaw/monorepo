/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class IPLDirectEffectParams {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IPLDirectEffectParams(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPLDirectEffectParams obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(IPLDirectEffectParams obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libphononJNI.delete_IPLDirectEffectParams(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setFlags(IPLDirectEffectFlags value) {
    libphononJNI.IPLDirectEffectParams_flags_set(swigCPtr, this, value.swigValue());
  }

  public IPLDirectEffectFlags getFlags() {
    return IPLDirectEffectFlags.swigToEnum(libphononJNI.IPLDirectEffectParams_flags_get(swigCPtr, this));
  }

  public void setTransmissionType(IPLTransmissionType value) {
    libphononJNI.IPLDirectEffectParams_transmissionType_set(swigCPtr, this, value.swigValue());
  }

  public IPLTransmissionType getTransmissionType() {
    return IPLTransmissionType.swigToEnum(libphononJNI.IPLDirectEffectParams_transmissionType_get(swigCPtr, this));
  }

  public void setDistanceAttenuation(float value) {
    libphononJNI.IPLDirectEffectParams_distanceAttenuation_set(swigCPtr, this, value);
  }

  public float getDistanceAttenuation() {
    return libphononJNI.IPLDirectEffectParams_distanceAttenuation_get(swigCPtr, this);
  }

  public void setAirAbsorption(SWIGTYPE_p_float value) {
    libphononJNI.IPLDirectEffectParams_airAbsorption_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getAirAbsorption() {
    long cPtr = libphononJNI.IPLDirectEffectParams_airAbsorption_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setDirectivity(float value) {
    libphononJNI.IPLDirectEffectParams_directivity_set(swigCPtr, this, value);
  }

  public float getDirectivity() {
    return libphononJNI.IPLDirectEffectParams_directivity_get(swigCPtr, this);
  }

  public void setOcclusion(float value) {
    libphononJNI.IPLDirectEffectParams_occlusion_set(swigCPtr, this, value);
  }

  public float getOcclusion() {
    return libphononJNI.IPLDirectEffectParams_occlusion_get(swigCPtr, this);
  }

  public void setTransmission(SWIGTYPE_p_float value) {
    libphononJNI.IPLDirectEffectParams_transmission_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getTransmission() {
    long cPtr = libphononJNI.IPLDirectEffectParams_transmission_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public IPLDirectEffectParams() {
    this(libphononJNI.new_IPLDirectEffectParams(), true);
  }

}
