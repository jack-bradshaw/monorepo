/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class IPLReflectionEffectParams {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IPLReflectionEffectParams(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPLReflectionEffectParams obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(IPLReflectionEffectParams obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libphononJNI.delete_IPLReflectionEffectParams(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setType(IPLReflectionEffectType value) {
    libphononJNI.IPLReflectionEffectParams_type_set(swigCPtr, this, value.swigValue());
  }

  public IPLReflectionEffectType getType() {
    return IPLReflectionEffectType.swigToEnum(libphononJNI.IPLReflectionEffectParams_type_get(swigCPtr, this));
  }

  public void setIr(SWIGTYPE_p__IPLReflectionEffectIR_t value) {
    libphononJNI.IPLReflectionEffectParams_ir_set(swigCPtr, this, SWIGTYPE_p__IPLReflectionEffectIR_t.getCPtr(value));
  }

  public SWIGTYPE_p__IPLReflectionEffectIR_t getIr() {
    long cPtr = libphononJNI.IPLReflectionEffectParams_ir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p__IPLReflectionEffectIR_t(cPtr, false);
  }

  public void setReverbTimes(SWIGTYPE_p_float value) {
    libphononJNI.IPLReflectionEffectParams_reverbTimes_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getReverbTimes() {
    long cPtr = libphononJNI.IPLReflectionEffectParams_reverbTimes_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setEq(SWIGTYPE_p_float value) {
    libphononJNI.IPLReflectionEffectParams_eq_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getEq() {
    long cPtr = libphononJNI.IPLReflectionEffectParams_eq_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setDelay(int value) {
    libphononJNI.IPLReflectionEffectParams_delay_set(swigCPtr, this, value);
  }

  public int getDelay() {
    return libphononJNI.IPLReflectionEffectParams_delay_get(swigCPtr, this);
  }

  public void setNumChannels(int value) {
    libphononJNI.IPLReflectionEffectParams_numChannels_set(swigCPtr, this, value);
  }

  public int getNumChannels() {
    return libphononJNI.IPLReflectionEffectParams_numChannels_get(swigCPtr, this);
  }

  public void setIrSize(int value) {
    libphononJNI.IPLReflectionEffectParams_irSize_set(swigCPtr, this, value);
  }

  public int getIrSize() {
    return libphononJNI.IPLReflectionEffectParams_irSize_get(swigCPtr, this);
  }

  public void setTanDevice(SWIGTYPE_p__IPLTrueAudioNextDevice_t value) {
    libphononJNI.IPLReflectionEffectParams_tanDevice_set(swigCPtr, this, SWIGTYPE_p__IPLTrueAudioNextDevice_t.getCPtr(value));
  }

  public SWIGTYPE_p__IPLTrueAudioNextDevice_t getTanDevice() {
    long cPtr = libphononJNI.IPLReflectionEffectParams_tanDevice_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p__IPLTrueAudioNextDevice_t(cPtr, false);
  }

  public void setTanSlot(int value) {
    libphononJNI.IPLReflectionEffectParams_tanSlot_set(swigCPtr, this, value);
  }

  public int getTanSlot() {
    return libphononJNI.IPLReflectionEffectParams_tanSlot_get(swigCPtr, this);
  }

  public IPLReflectionEffectParams() {
    this(libphononJNI.new_IPLReflectionEffectParams(), true);
  }

}
