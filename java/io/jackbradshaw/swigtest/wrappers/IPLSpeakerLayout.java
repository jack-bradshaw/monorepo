/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class IPLSpeakerLayout {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IPLSpeakerLayout(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPLSpeakerLayout obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(IPLSpeakerLayout obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libphononJNI.delete_IPLSpeakerLayout(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setType(IPLSpeakerLayoutType value) {
    libphononJNI.IPLSpeakerLayout_type_set(swigCPtr, this, value.swigValue());
  }

  public IPLSpeakerLayoutType getType() {
    return IPLSpeakerLayoutType.swigToEnum(libphononJNI.IPLSpeakerLayout_type_get(swigCPtr, this));
  }

  public void setNumSpeakers(int value) {
    libphononJNI.IPLSpeakerLayout_numSpeakers_set(swigCPtr, this, value);
  }

  public int getNumSpeakers() {
    return libphononJNI.IPLSpeakerLayout_numSpeakers_get(swigCPtr, this);
  }

  public void setSpeakers(IPLVector3 value) {
    libphononJNI.IPLSpeakerLayout_speakers_set(swigCPtr, this, IPLVector3.getCPtr(value), value);
  }

  public IPLVector3 getSpeakers() {
    long cPtr = libphononJNI.IPLSpeakerLayout_speakers_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IPLVector3(cPtr, false);
  }

  public IPLSpeakerLayout() {
    this(libphononJNI.new_IPLSpeakerLayout(), true);
  }

}
